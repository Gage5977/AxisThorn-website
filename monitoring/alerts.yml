# Monitoring and Alerting Configuration
# For use with Datadog, New Relic, or similar monitoring services

monitors:
  - name: API Health Check
    type: http
    url: https://axisthorn.com/api/health
    method: GET
    expected_status: 200
    interval: 60s
    timeout: 10s
    alert:
      after_failures: 3
      channels: [slack, email]
      severity: critical
      message: "CRITICAL: Axis Thorn API is DOWN! Health check failing."

  - name: API Response Time
    type: metric
    metric: http.request.duration
    tags:
      - service:axis-api
      - env:production
    threshold:
      warning: 200ms  # p95
      critical: 500ms # p99
    window: 5m
    alert:
      channels: [slack]
      message: "API response time exceeds threshold: {{value}}ms"

  - name: Error Rate
    type: metric
    metric: http.request.errors
    tags:
      - service:axis-api
      - env:production
    threshold:
      warning: 1%   # 1% error rate
      critical: 5%  # 5% error rate
    window: 5m
    alert:
      channels: [slack, pagerduty]
      message: "High error rate detected: {{value}}%"

  - name: Memory Usage
    type: metric
    metric: container.memory.usage
    tags:
      - service:axis-api
    threshold:
      warning: 450MB
      critical: 500MB
    window: 10m
    alert:
      channels: [slack]
      message: "Memory usage high: {{value}}MB - possible memory leak"

  - name: Database Connection Pool
    type: metric
    metric: db.connection.pool.size
    tags:
      - service:axis-api
      - db:postgres
    threshold:
      warning: 80   # 80% of max connections
      critical: 95  # 95% of max connections
    window: 5m
    alert:
      channels: [slack, email]
      message: "Database connection pool near limit: {{value}}%"

  - name: Redis Connection
    type: tcp
    host: redis.axisthorn.internal
    port: 6379
    interval: 30s
    timeout: 5s
    alert:
      after_failures: 3
      channels: [slack]
      severity: warning
      message: "Redis connection failed - rate limiting may be affected"

  - name: SSL Certificate Expiry
    type: ssl
    url: https://axisthorn.com
    days_before_expiry: 30
    alert:
      channels: [email]
      message: "SSL certificate expires in {{days}} days"

  - name: Disk Usage
    type: metric
    metric: system.disk.usage
    threshold:
      warning: 80%
      critical: 90%
    alert:
      channels: [slack, email]
      message: "Disk usage critical: {{value}}%"

# Synthetic Monitoring
synthetics:
  - name: User Login Flow
    type: browser
    steps:
      - goto: https://axisthorn.com/portal-login.html
      - fill: 
          selector: "#login-email"
          value: "monitor@axisthorn.com"
      - fill:
          selector: "#login-password"
          value: "${MONITOR_PASSWORD}"
      - click: 
          selector: "button[type=submit]"
      - wait_for:
          selector: "#user-email"
          timeout: 10s
    interval: 15m
    locations: [us-east-1, us-west-2, eu-west-1]
    alert:
      channels: [slack, pagerduty]
      message: "Login flow failing from {{location}}"

  - name: Invoice PDF Generation
    type: api
    request:
      url: https://axisthorn.com/api/v1/invoices/test/pdf
      method: GET
      headers:
        Authorization: "Bearer ${MONITOR_API_TOKEN}"
    expected:
      status: 200
      headers:
        content-type: application/pdf
    interval: 30m
    alert:
      channels: [slack]
      message: "Invoice PDF generation failing"

# Alert Channels
channels:
  slack:
    webhook_url: "${SLACK_WEBHOOK_URL}"
    channel: "#alerts"
    username: "Axis Monitor"
    
  email:
    recipients:
      - ops@axisthorn.com
      - oncall@axisthorn.com
    
  pagerduty:
    service_key: "${PAGERDUTY_SERVICE_KEY}"
    
# Dashboard Configuration
dashboards:
  - name: Axis Thorn Production
    widgets:
      - type: timeseries
        title: API Response Time
        metrics:
          - http.request.duration{service:axis-api}
        
      - type: query_value
        title: Current Error Rate
        query: "sum(rate(http.request.errors{service:axis-api}[5m]))"
        
      - type: heatmap
        title: Response Time by Endpoint
        metric: http.request.duration
        group_by: http.route
        
      - type: log_stream
        title: Error Logs
        query: "status:error service:axis-api"
        
      - type: service_map
        title: Service Dependencies
        service: axis-api